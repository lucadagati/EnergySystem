{"version":3,"sources":["./src/app/bluetooth/bluetooth.page.ts","./src/app/bluetooth/bluetooth-routing.module.ts","./src/app/bluetooth/bluetooth.page.scss","./src/app/bluetooth/bluetooth.module.ts","./src/app/bluetooth/bluetooth.page.html"],"names":[],"mappings":"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","file":"bluetooth-bluetooth-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { BLE } from '@ionic-native/ble/ngx';\nimport { NgZone } from '@angular/core';\nimport { NavController, ToastController } from '@ionic/angular';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { stringify } from '@angular/compiler/src/util';\n\n\n@Component({\n  selector: 'app-bluetooth',\n  templateUrl: './bluetooth.page.html',\n  styleUrls: ['./bluetooth.page.scss'],\n})\nexport class BluetoothPage implements OnInit {\n\n  constructor(\n    public toastCtrl: ToastController,\n    public navCtrl: NavController, \n    private ble: BLE,\n    private ngZone: NgZone,\n    private router: Router) { }\n\n  ngOnInit() {}\n\n  devices:any[] = [];\n  statusMessage: string;\n  storage: any;\n\n  //////////////////////////////////////////////////////////// scannig\n  Scan(){\n    var status = this.ble.isEnabled().then(\n      function() {\n          console.log(\"Bluetooth is enabled\");\n          return true;\n      },\n      function() {\n          console.log(\"Bluetooth is *not* enabled\");\n          const alert = document.createElement('ion-alert');\n            alert.header = 'BLUETOOTH STATUS';\n            alert.subHeader = 'OFF';\n            alert.message = \"Please, turn-on Bluetooth to use this app\";\n            alert.buttons = ['OK'];\n          \n            document.body.appendChild(alert);\n            return alert.present();\n      }\n   );\n      if (status){\n        console.log(\"BLE \" + status);\n        this.startscan();\n      }\n  }\n\n  startscan(){\n    this.setStatus('Scanning for Bluetooth LE Devices');\n    this.devices = []; //clear list\n\n    this.ble.scan([],5).subscribe(\n      device =>\n        this.onDeviceDiscovered(device),\n      async error =>  {\n        var toast = this.toastCtrl.create({\n        message: stringify(error),\n        duration: 3000,\n        position: 'middle'\n        });\n        (await toast).present(); \n      }\n    );\n    setTimeout(this.setStatus.bind(this), 5000, \"Scan Completed\");\n    setTimeout(() => {\n      this.nodevicefound();\n    }, 5000);  \n  }\n\n\n  async nodevicefound(){\n    if (this.devices.length<1) {\n        var toast = this.toastCtrl.create({\n        message: 'No devices found in peripherals',\n        duration: 3000,\n        position: 'middle'\n    });\n    (await toast).present();\n    }\n  }\n\n\n  onDeviceDiscovered(device: any){\n    console.log('Discovered' + JSON.stringify(device,null,2));\n    this.ngZone.run(()=>{\n      this.devices.push(device)\n    })\n  }\n\n  async deviceSelected(device: any){\n    console.log(JSON.stringify(device) + 'selected');\n    console.log(device.id + 'called to connect');\n    let navigationExtras: NavigationExtras = {\n      state: {\n        id: device.id,\n      }\n      \n    };\n    this.router.navigate(['bldetail'], navigationExtras);\n   // this.connect(device.id);\n  }\n\n  async setStatus(message: string) {\n    console.log(message);\n    this.ngZone.run(() => {\n      this.statusMessage = message;\n    });\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BluetoothPage } from './bluetooth.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BluetoothPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class BluetoothPageRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJibHVldG9vdGgucGFnZS5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { BluetoothPageRoutingModule } from './bluetooth-routing.module';\n\nimport { BluetoothPage } from './bluetooth.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    BluetoothPageRoutingModule\n  ],\n  declarations: [BluetoothPage]\n})\nexport class BluetoothPageModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>\\n      BLE devices\\n    </ion-title>\\n    <ion-button (click)=\\\"Scan()\\\" slot=\\\"end\\\">\\n      <ion-icon name=\\\"Bluetooth\\\"></ion-icon>\\n      <p>Scan</p>\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <button ion-item *ngFor=\\\"let device of devices\\\" (click)=\\\"deviceSelected(device)\\\">\\n      <h2>{{device.name || 'Unnamed'}}</h2>\\n      <p>{{device.id}}</p>\\n      <p> RSSI: {{device.rssi}}</p>\\n      </button>\\n  </ion-list>\\n</ion-content>\";"],"sourceRoot":"webpack:///"}